@model ENBDGroup.Feature.Enbd.Website.Banner.Models.IParallaxBanner
@using LivApp.Foundation.CMS.Extensions
@using LivApp.Foundation.CMS.Helpers
@using Glass.Mapper.Sc.Web.Mvc

@if (Model == null)
{
    return; // skip the rest
}

<div class="trigger1"></div>

<section class="cc-home @Model.CssClass" @RazorViewHelper.GetHtmlAttribute(Model.ContentId)>
    <div class="bcg lazy-image" data-src="@RazorViewHelper.GetBackgroundImage(Model.BackgroundImage)">
        @if (Sitecore.Context.PageMode.IsExperienceEditor)
        {
            @Html.Glass().RenderImage(Model, m => m.BackgroundImage, isEditable: true)
        }
    </div>

    <div class="container">
        <div class="row">
            <div class="col-12">
                <div class="section1-block">
                    <div class="section1-heading text-white">
                        <div class="section1-heading_text2 display-3 display-liv-sm-5">
                            @Html.Glass().Editable(Model, m => m.Title)
                        </div>
                    </div>

                    <div class="card-back">
                        @Html.Glass().RenderImage(Model, m => m.CardImage).ToLazyImage()
                    </div>

                    @{
                        // the images path are hard-coded because their ordering cannot be changed.
                        // changing the image requires updating the CSS too.
                        var imageRootPath = "/-/media/liv/website/common/parallaxBanner";
                    }
                    <div class="lightburst lazy-image" data-src="@imageRootPath/default/bg-lightburst"></div>
                    <div class="popcorn lazy-image" data-src="@imageRootPath/attractions/popcorn"></div>
                    <div class="ticket lazy-image" data-src="@imageRootPath/attractions/tickets"></div>
                    <div class="airplain lazy-image" data-src="@imageRootPath/attractions/plane"></div>
                    <div class="burj-khalifa lazy-image" data-src="@imageRootPath/attractions/burj-khalifa"></div>
                    <div class="galata lazy-image" data-src="@imageRootPath/attractions/galata"></div>

                    @{
                        var vendorIndex = 0;
                        var vendorsMax = 10;
                        var vendorsActualCount = Model.Vendors.Count();
                        var vendorsCount = vendorsActualCount > vendorsMax ? vendorsMax : vendorsActualCount;
                        var vendorLogosPositionCollection = new int[][] {
                            new int[] {          5,                   }, // 1 item
                            new int[] {       3,             8        }, // 2 items
                            new int[] {   2,        5,          9     }, // 3 items
                            new int[] {   2,     4,       7,    9     }, // 4 items
                            new int[] { 1,    3,    5,    7,    9     }, // 5 items
                            new int[] {       3, 4, 5, 6, 7, 8        }, // 6 items
                            new int[] {       3, 4, 5, 6, 7, 8, 9, 10 }, // 7 items
                            new int[] {    2, 3, 4, 5, 6, 7, 8, 9     }, // 8 items
                            new int[] { 1, 2, 3, 4, 5,    7, 8, 9, 10 }, // 9 items
                            new int[] { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 } // 10 items
                        };
                        var vendorLogosPositions = vendorLogosPositionCollection[vendorsCount - 1];

                        foreach (var vendor in Model.Vendors)
                        {
                            if (vendorIndex < vendorsMax)
                            {
                                var vendorPosition = vendorLogosPositions[vendorIndex++];

                                if (Sitecore.Context.PageMode.IsExperienceEditor)
                                {
                                    @Html.Glass().RenderImage(vendor, m => m.Logo, new { @class = "logo logo" + vendorPosition }, isEditable: true)
                                }
                                else
                                {
                                    <div class="logo logo@(vendorPosition) lazy-image" data-src="@RazorViewHelper.GetBackgroundImage(vendor.Logo)"></div>
                                }
                            }
                        }
                    }

                    <div class="cards">
                        @Html.Glass().RenderImage(Model, m => m.CardImage, isEditable: true).ToLazyImage()
                    </div>

                    <div class="section1-detail text-center">
                        <div class="section1-detail_text2">
                            @Html.Glass().Editable(Model, m => m.Description)
                        </div>
                    </div>

                    <div class="section-after"></div>
                </div>
            </div>
        </div>

        <div class="mouse-wrap text-white">
            <div class="mouse mx-auto"> </div>
        </div>
    </div>
</section>

@if (Sitecore.Context.PageMode.IsExperienceEditor)
{
    <style>
        .cc-home .bcg {
            overflow: hidden;
        }

            .cc-home .bcg img {
                width: 100%;
                opacity: 0;
                position: absolute;
                top: 0;
                left: 0;
            }
    </style>
}
