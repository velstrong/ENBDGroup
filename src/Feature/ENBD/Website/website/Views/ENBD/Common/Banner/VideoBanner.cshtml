@model ENBDGroup.Feature.Enbd.Website.Banner.Models.IVideoBanner
@using Glass.Mapper.Sc.Web.Mvc
@using LivApp.Foundation.Core.Utilities;
@using LivApp.Foundation.Core.Extensions;
@if (Model != null)
{
    <section class="pt-0 pb-0 py-md-5 bg-dark bg-section-1 text-white section ar-text-right section-block_1 @Model.CssClass">
        <div class="container">
            <div class="row align-items-center justify-content-between  pt-0 py-md-0">
                <div class="col-12 col-md-6 col-lg-6 text-left text-lg-left pt-5 pt-md-0 mt-5 mt-lg-0">
                    <div class="">
                        @using (Html.Glass().BeginRenderLink(Model, x => x.LogoLink, new { @title = (Model.LogoLink != null ? Model.LogoLink.Text : string.Empty) }.UpdateCustomAttributes(Model.Id, "Logo Link"), isEditable: true))
                        {
                            @Html.Glass().RenderImage(Model, x => x.LogoImage, new { @class = "navbar-logo navbar-logo-dark mb-3 mt-md-0" }, isEditable: true)
                        }
                    </div>
                    <h1 class="display-3 strong mb-1 f-size-1 f-size-md-2 mt-3 mt-lg-0">
                        @Html.Glass().Editable(Model, x => x.Heading)

                        <br>
                        @Html.Glass().Editable(Model, x => x.SpinningText)
                    </h1>

                    <p class="lead"> @Html.Glass().Editable(Model, x => x.Description)</p>
                    @using (Html.Glass().BeginRenderLink(Model, x => x.CTALink, new { @title = (Model.CTALink != null ? Model.CTALink.Text : string.Empty), @class = (Model.CTALink != null ? "btn btn-sm btn-rounded btn-liv btn-liv-big px-3 " + Model.CTALink.Class : "btn btn-sm btn-rounded btn-liv btn-liv-big px-3") }.UpdateCustomAttributes(Model.Id, "CTA Link"), isEditable: true))
                    {
                        if (Model.CTALink != null)
                        {
                            <i class="t-icon icon-apps"></i>
                            @Model.CTALink.Text
                        }
                    }
                    <div class="mouse mt-md-5 d-none d-md-block"> </div>
                </div>
                <div class="col-12 col-md-6 col-lg-6 text-right pt-lg-5 home-img-wrap">

                    @Html.Glass().RenderImage(Model, x => x.BannerImage, new { @class = "mx-md-auto  home-img home-img-left" }, isEditable: true)
                    <div class="mx-auto home-video ">
                        @if (Model.VideoLink != null && Model.VideoLink.Type == Glass.Mapper.Sc.Fields.LinkType.Media)
                        {
                            <video width="100%" height="100%" autoplay muted loop playsinline poster="@(Model.PlaceholderImage!=null?Model.PlaceholderImage.Src:"")" preload="auto">
                                <source src="@Model.VideoLink.Url" type="video/mp4">
                                <!-- <source src="movie.ogg" type="video/ogg"> -->
                                Your browser does not support the video tag.
                            </video>
                        }

                    </div>
                    @Html.Glass().RenderImage(Model, x => x.BannerImage2, new { @class = "mx-md-auto home-img home-img-right" }, isEditable: true)
                </div>
            </div>
        </div>
    </section>
}